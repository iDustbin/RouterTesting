div

	.form-horizontal
		- var projects = this.state.projects;
		- var projectName = this.state.projectName;
		- var project, playbook, inventoryNames;

		if projects
			.form-group
				label.col-md-offset-2.col-md-2.control-label(for="project-name") Project
				.col-md-4
					select#project-name.form-control(
						onChange=this.onProjectNameChange,
						value= projectName
					)
						option(value="", key="notSet") - select project -
						each project in projects
							option(value= project.name, key= project.name)= project.name

			- project = _(projects).findWhere({name: projectName});

		if project
			.form-group
				label.col-md-offset-2.col-md-2.control-label(for="scm-branch") Branch
				.col-md-4

					- var scmRev = project && project.scm ? project.scm.rev : '';
					select#scm-branch.form-control(
						onChange=this.onScmBranchChange
					)
						option(value=scmRev)= scmRev
						option(value=-1) Custom revision

					- var scmBranch = this.state.scmBranch;
					if scmBranch === '-1'
						| 
						input.form-control(
							value= this.state.scmRev,
							onChange=this.onScmRevChange
						)

		if project && project.playbooks && project.playbooks.length
			.form-group
				label.col-md-offset-2.col-md-2.control-label(for="playbook-name") Playbook
				.col-md-4
					select#playbook-name.form-control(onChange=this.onPlaybookNameChange)
						option(value="", key="notSet") - select playbook -
						each playbook in project.playbooks
							option(value= playbook.name, key= playbook.name)= playbook.name


			- var playbookName = this.state.playbookName;
			- playbook = _(project.playbooks).findWhere({name: playbookName});

			if playbookName
				- inventoryNames = this.state.inventoryNames;
				- var checkedInventoriesCount = 0;
				.form-group
					label.col-md-offset-2.col-md-2.control-label Inventories
					.col-md-4
						.row
							each inventory in playbook.inventories
								.col-md-3(key= 'column-for-' + inventory.name)
									label(key= 'label-for-' + inventory.name)
										- var checked = _(inventoryNames).contains(inventory.name);
										- if (checked) checkedInventoriesCount++;
										input(
											type="checkbox",
											value= inventory.name,
											key= inventory.name,
											onClick=this.onInventoryNamesChange,
											checked= checked
										)
										= inventory.name
						.row
							.col-md-12.text-right
								if checkedInventoriesCount === playbook.inventories.length
									a(
										href="javascript:void(0);",
										onClick=this.onUnselectAllInventoryNames
									) Unselect all inventories
								else
									a(
										href="javascript:void(0);",
										onClick=this.onSelectAllInventoryNames
									) select all inventories

				.form-group
					label.col-md-offset-2.col-md-2.control-label(
						for="limit",
						title="further limit selected hosts to an additional pattern"
					) Limit
					.col-md-4
						input#limit.form-control(
							type="text",
							value= this.state.limit
							onChange=this.onLimitChange
						)

				.form-group
					label.col-md-offset-2.col-md-2.control-label(
						for="extra-vars",
						title="set additional variables as key=value (e.g. a=123 b=\"some string\") or YAML/JSON (e.g. {a: 123, b: \"some string\"})"
					) Extra vars
					.col-md-4
						input#extra-vars.form-control(
							type="text",
							value= this.state.extraVars
							onChange=this.onExtraVarsChange
						)

		.form-group
			.col-md-offset-4.col-md-2
				button.btn.btn-md.btn-default.btn-block(onClick=this.onCancel)
					i.fa.fa-fw.fa-ban
					| 
					span Cancel

			.col-md-2
				- var buttonClasses = [];

				- var isValidForm;
				- if (project && !project.playbooks) {
				- 	isValidForm = true;
				- } else if (project && project.playbooks) {
				- 	isValidForm = playbook && inventoryNames && inventoryNames.length;
				- }

				- if (!isValidForm) buttonClasses.push('disabled');

				button.btn.btn-md.btn-success.btn-block(onClick=this.onRunProject, class= buttonClasses)
					i.fa.fa-fw.fa-play
					| 
					span Run

